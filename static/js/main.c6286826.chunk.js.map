{"version":3,"sources":["data.js","components/Header.js","components/CitySearch.js","components/WeatherInformation.js","App.js","serviceWorker.js","index.js"],"names":["data","Header","props","title","subTitle","className","defaultProps","CitySearch","city","getWeatherInfo","onCityUpdateMethod","id","type","name","placeholder","value","onChange","event","onKeyPress","e","key","onClick","WeatherInformation","weatherInformation","temperatureInformation","error","temp","temp_min","temp_max","weather","icon","description","src","alt","temperature","App","state","weatherInfo","find","d","toLowerCase","trim","main","setState","onCityUpdate","target","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6286826.chunk.js","sourcesContent":["const data = [\n    {\n       \"coord\":{\n          \"lon\":151.22,\n          \"lat\":-33.85\n       },\n       \"weather\":[\n          {\n             \"id\":800,\n             \"main\":\"Clear\",\n             \"description\":\"clear sky\",\n             \"icon\":\"http://openweathermap.org/img/wn/01d@2x.png\" // added a valid icon instead of 01d\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":26.83,\n          \"feels_like\":26.12,\n          \"temp_min\":23.89,\n          \"temp_max\":30,\n          \"pressure\":1019,\n          \"humidity\":44\n       },\n       \"visibility\":10000,\n       \"wind\":{\n          \"speed\":2.6,\n          \"deg\":170\n       },\n       \"clouds\":{\n          \"all\":0\n       },\n       \"dt\":1576804792,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9599,\n          \"country\":\"AU\",\n          \"sunrise\":1576780812,\n          \"sunset\":1576832666\n       },\n       \"timezone\":39600,\n       \"id\":2147714,\n       \"name\":\"Sydney\",\n       \"cod\":200,\n    },\n    {\n       \"coord\":{\n          \"lon\":130.84,\n          \"lat\":-12.46\n       },\n       \"weather\":[\n          {\n             \"id\":801,\n             \"main\":\"Clouds\",\n             \"description\":\"few clouds\",\n             \"icon\":\"http://openweathermap.org/img/wn/02d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":33.53,\n          \"feels_like\":36.38,\n          \"temp_min\":33,\n          \"temp_max\":33.89,\n          \"pressure\":1010,\n          \"humidity\":55\n       },\n       \"visibility\":10000,\n       \"wind\":{\n          \"speed\":3.6,\n          \"deg\":360\n       },\n       \"clouds\":{\n          \"all\":20\n       },\n       \"dt\":1576804738,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9574,\n          \"country\":\"AU\",\n          \"sunrise\":1576788490,\n          \"sunset\":1576834773\n       },\n       \"timezone\":34200,\n       \"id\":2073124,\n       \"name\":\"Darwin\",\n       \"cod\":200\n    },\n    {\n       \"coord\":{\n          \"lon\":149.1,\n          \"lat\":-35.3\n       },\n       \"weather\":[\n          {\n             \"id\":711,\n             \"main\":\"Smoke\",\n             \"description\":\"smoke\",\n             \"icon\":\"http://openweathermap.org/img/wn/50d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":31.78,\n          \"feels_like\":25.14,\n          \"temp_min\":31.11,\n          \"temp_max\":32.78,\n          \"pressure\":1018,\n          \"humidity\":11\n       },\n       \"visibility\":6000,\n       \"wind\":{\n          \"speed\":6.2,\n          \"deg\":340\n       },\n       \"clouds\":{\n          \"all\":90\n       },\n       \"dt\":1576804934,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9588,\n          \"country\":\"AU\",\n          \"sunrise\":1576781081,\n          \"sunset\":1576833414\n       },\n       \"timezone\":39600,\n       \"id\":2172517,\n       \"name\":\"Canberra\",\n       \"cod\":200\n    },\n    {\n       \"coord\":{\n          \"lon\":144.96,\n          \"lat\":-37.81\n       },\n       \"weather\":[\n          {\n             \"id\":800,\n             \"main\":\"Clear\",\n             \"description\":\"clear sky\",\n             \"icon\":\"http://openweathermap.org/img/wn/01d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":37.77,\n          \"feels_like\":31.18,\n          \"temp_min\":35.56,\n          \"temp_max\":40.56,\n          \"pressure\":1011,\n          \"humidity\":13\n       },\n       \"visibility\":10000,\n       \"wind\":{\n          \"speed\":7.7,\n          \"deg\":350\n       },\n       \"clouds\":{\n          \"all\":1\n       },\n       \"dt\":1576804932,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9548,\n          \"country\":\"AU\",\n          \"sunrise\":1576781636,\n          \"sunset\":1576834848\n       },\n       \"timezone\":39600,\n       \"id\":2158177,\n       \"name\":\"Melbourne\",\n       \"cod\":200\n    },\n    {\n       \"coord\":{\n          \"lon\":153.02,\n          \"lat\":-27.47\n       },\n       \"weather\":[\n          {\n             \"id\":800,\n             \"main\":\"Clear\",\n             \"description\":\"clear sky\",\n             \"icon\":\"http://openweathermap.org/img/wn/01d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":30.72,\n          \"feels_like\":31.07,\n          \"temp_min\":27.22,\n          \"temp_max\":33.33,\n          \"pressure\":1016,\n          \"humidity\":40\n       },\n       \"visibility\":10000,\n       \"wind\":{\n          \"speed\":2.1,\n          \"deg\":120\n       },\n       \"clouds\":{\n          \"all\":0\n       },\n       \"dt\":1576804667,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9481,\n          \"country\":\"AU\",\n          \"sunrise\":1576781332,\n          \"sunset\":1576831282\n       },\n       \"timezone\":36000,\n       \"id\":2174003,\n       \"name\":\"Brisbane\",\n       \"cod\":200\n    },\n    {\n       \"coord\":{\n          \"lon\":138.6,\n          \"lat\":-34.93\n       },\n       \"weather\":[\n          {\n             \"id\":761,\n             \"main\":\"Dust\",\n             \"description\":\"dust\",\n             \"icon\":\"http://openweathermap.org/img/wn/50d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":40.76,\n          \"feels_like\":32.48,\n          \"temp_min\":37.22,\n          \"temp_max\":43.89,\n          \"pressure\":1006,\n          \"humidity\":13\n       },\n       \"visibility\":7000,\n       \"wind\":{\n          \"speed\":10.8,\n          \"deg\":330,\n          \"gust\":15.9\n       },\n       \"clouds\":{\n          \"all\":0\n       },\n       \"dt\":1576804667,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9566,\n          \"country\":\"AU\",\n          \"sunrise\":1576783664,\n          \"sunset\":1576835873\n       },\n       \"timezone\":37800,\n       \"id\":2078025,\n       \"name\":\"Adelaide\",\n       \"cod\":200\n    },\n    {\n       \"coord\":{\n          \"lon\":115.86,\n          \"lat\":-31.95\n       },\n       \"weather\":[\n          {\n             \"id\":802,\n             \"main\":\"Clouds\",\n             \"description\":\"scattered clouds\",\n             \"icon\":\"http://openweathermap.org/img/wn/03d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":21.54,\n          \"feels_like\":20.81,\n          \"temp_min\":21,\n          \"temp_max\":22.22,\n          \"pressure\":1018,\n          \"humidity\":56\n       },\n       \"visibility\":10000,\n       \"wind\":{\n          \"speed\":2.1,\n          \"deg\":150\n       },\n       \"clouds\":{\n          \"all\":40\n       },\n       \"dt\":1576804666,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9586,\n          \"country\":\"AU\",\n          \"sunrise\":1576789600,\n          \"sunset\":1576840856\n       },\n       \"timezone\":28800,\n       \"id\":2063523,\n       \"name\":\"Perth\",\n       \"cod\":200\n    },\n    {\n       \"coord\":{\n          \"lon\":147.33,\n          \"lat\":-42.88\n       },\n       \"weather\":[\n          {\n             \"id\":802,\n             \"main\":\"Clouds\",\n             \"description\":\"scattered clouds\",\n             \"icon\":\"http://openweathermap.org/img/wn/03d@2x.png\"\n          }\n       ],\n       \"base\":\"stations\",\n       \"main\":{\n          \"temp\":24.15,\n          \"feels_like\":19.85,\n          \"temp_min\":21.67,\n          \"temp_max\":27.22,\n          \"pressure\":1012,\n          \"humidity\":33\n       },\n       \"visibility\":10000,\n       \"wind\":{\n          \"speed\":5.1,\n          \"deg\":30\n       },\n       \"clouds\":{\n          \"all\":40\n       },\n       \"dt\":1576804895,\n       \"sys\":{\n          \"type\":1,\n          \"id\":9545,\n          \"country\":\"AU\",\n          \"sunrise\":1576780056,\n          \"sunset\":1576835290\n       },\n       \"timezone\":39600,\n       \"id\":2163355,\n       \"name\":\"Hobart\",\n       \"cod\":200\n    }\n ];\n\n export default data;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Header (props) {\n    const { title, subTitle } = props;\n\n    return (\n      <>\n        <h1 className= \"titleHeader\">{title}</h1>\n        <p className= \"subTitle\">{subTitle}</p>\n      </>\n      );\n}\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    subTitle: PropTypes.string,\n}\nHeader.defaultProps = {\n    title: '',\n    subTitle: ''\n};\n\nexport default Header;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nconst CitySearch = props => {\n    const { city, getWeatherInfo, onCityUpdateMethod } = props;\n\n    return (\n      <div className=\"citySearch\">\n        <input\n          id=\"cityInput\"\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"Enter your City...\"\n          value={city}\n          onChange={(event) => onCityUpdateMethod(event)}\n          onKeyPress={e => { \n            if(e.key === 'Enter'){\n              getWeatherInfo();\n            }\n          }\n        }\n        />\n        <button \n          id=\"getWeather\"\n          onClick={getWeatherInfo}\n          >\n            Get Weather\n          </button>\n      </div>\n    )\n  };\n\n  CitySearch.propTypes = {\n    city: PropTypes.string,\n    getWeatherInfo: PropTypes.func.isRequired,\n    onCityUpdateMethod: PropTypes.func.isRequired\n  };\n  \n  CitySearch.defaultProps = {\n    city: ''\n  };\n  \n  export default CitySearch;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst WeatherInformation = (props) => {\n    const { weatherInformation, temperatureInformation, error } = props;\n    const { temp, temp_min, temp_max} = temperatureInformation;\n    // Error message when input value is not valid or empty\n    if(error){\n        return (<div className= \"container\">\n            <div  id=\"weatherInfoError\">\n                {error}\n            </div>\n        </div>);\n    }\n\n    const {city, weather } =  weatherInformation;\n    const { icon, description } = weather[0];\n\n    return ( city && description &&\n        <div className= \"container\">\n            <div className= \"city\">\n                <div className= \"cityName\">\n                    <h1 id=\"weatherInfoCity\">{city}</h1>\n                </div>\n                {icon && <img src={icon} alt={city} />}\n                <div className= \"temperature\" id=\"weatherInfoTemperature\">\n                    {`${temp}° C`}\n                </div>\n                <div className= \"description\" id=\"weatherInfoDescription\">\n                    {description}\n                </div>\n                <div className= \"temperatureMin\" id=\"weatherInfoTemperatureMinMax\">\n                    {`${temp_min}° C`} | {`${temp_max}° C`}\n                </div>\n            </div>\n        </div>);\n};\n\n\nWeatherInformation.propTypes = {\n    city: PropTypes.string,\n    temperature: PropTypes.number,\n    weatherInformation: PropTypes.shape({\n        city: PropTypes.string,\n        weather: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon: PropTypes.string,\n            description: PropTypes.string\n        })\n    ),\n    }),\n    error: PropTypes.string,\n};\n\nWeatherInformation.defaultProps = {\n    temperature: 0,\n    weatherInformation: {\n        city: '',\n        weather: []\n    },\n    error: ''\n}\n\nexport default WeatherInformation;","import React from 'react';\nimport data from './data';\nimport Header from './components/Header';\nimport CitySearch from \"./components/CitySearch\";\nimport WeatherInformation from \"./components/WeatherInformation\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Main App State\n    this.state = {\n      city: '',\n      main: { \n        temp: 0,\n        temp_min: 0,\n        temp_max: 0,\n        },\n      weatherInformation: {\n        city: '',\n        weather:[{\n        description: '',\n        main: '',\n        icon: '',\n        }]\n        },\n      error: '',\n    };\n  }\n\n  getWeatherInfo = () => {\n    const { city } = this.state;\n    if(!city){\n      this.setState({error: 'Please enter a valid city name'});\n      return;\n    }\n    \n    const weatherInfo = data.find(d => \n      d.name.toLowerCase() === city.toLowerCase().trim());\n\n    if(weatherInfo){\n      const { name, weather, main } = weatherInfo;\n      this.setState({\n        weatherInformation: {\n          city: name, \n          weather,\n        },\n        main,\n        error: ''\n      });\n      } else{\n        this.setState({\n          error: `Couldn't find weather information for ${city}!`\n        });\n      }\n    \n  };\n\n  onCityUpdate = (event) => {\n    this.setState({ city: event.target.value })\n  }\n\n  render () {\n    const { onCityUpdate, state, getWeatherInfo } = this;\n    const { city, main, weatherInformation, error } = state;\n\n    return (\n      <div className= \"wrapper\">\n        <div className= \"mainWrapper\">\n          <div className= \"innerWrapper\">\n            <div className= \"weatherDesc\">\n              <Header\n                title=\"Weather Forecast\"\n                subTitle=\"Find out your current city, temperature and conditions\" />\n              <CitySearch\n                onCityUpdateMethod={onCityUpdate}\n                city={city}\n                getWeatherInfo={getWeatherInfo} />\n            </div>\n            <div className=\"weather_info\">\n              <WeatherInformation\n                city={city}\n                temperatureInformation={main}\n                weatherInformation={weatherInformation}\n                error={error}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}